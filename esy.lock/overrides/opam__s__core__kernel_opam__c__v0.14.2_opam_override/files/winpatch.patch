--- ./config/detect.sh
+++ ./config/detect.sh
@@ -4,14 +4,27 @@
 
 set -e
 
-if ld -lm -shared --wrap caml_modify -o /dev/null 2>/dev/null; then
+
+system="$( ocamlfind ocamlc -config | awk '/^system:/ {print $2}')"
+case "$system" in
+    win*)
+        ld_wrap_possible=false
+        posix_timers_possible=false
+        ;;
+    mingw*)
+        ld_wrap_possible=false
+        posix_timers_possible=false
+        ;;
+    *)
+
+        if ld -lm -shared --wrap caml_modify -o /dev/null 2>/dev/null; then
     ld_wrap_possible=true
-else
+        else
     ld_wrap_possible=false
-fi
+        fi
 
-ptimer=`getconf _POSIX_TIMERS || echo undefined`
-case $ptimer in
+        ptimer=`getconf _POSIX_TIMERS || echo undefined`
+        case $ptimer in
     undefined)
         posix_timers_possible=false
         ;;
@@ -22,6 +35,8 @@
             posix_timers_possible=false
         fi
         ;;
+        esac
+        ;;
 esac
 
 if [ -e setup.data ]; then
--- ./src/bigstring_stubs.c
+++ ./src/bigstring_stubs.c
@@ -11,16 +11,37 @@
 #endif
 
 #include <string.h>
+#ifndef _MSC_VER
 #include <unistd.h>
+#include <stdint.h>
+#else
+#include <stdlib.h>
+#endif
+
 #include <errno.h>
 #include <assert.h>
-#include <stdint.h>
+
 
 #ifdef __APPLE__
 #include <libkern/OSByteOrder.h>
 #define bswap_16 OSSwapInt16
 #define bswap_32 OSSwapInt32
 #define bswap_64 OSSwapInt64
+#elif __MINGW32__
+#if defined(__GNUC__) && __GNUC__ > 4
+#define bswap_16 __builtin_bswap16
+#else
+static inline uint16_t bswap_16 (uint16_t x)
+{
+    return (x << 8) | (x >> 8);
+}
+#endif
+#define bswap_32 __builtin_bswap32
+#define bswap_64 __builtin_bswap64
+#elif _MSC_VER
+#define bswap_16 _byteswap_ushort
+#define bswap_32 _byteswap_ulong
+#define bswap_64 _byteswap_uint64
 #elif __GLIBC__
 #include <byteswap.h>
 #include <malloc.h>
--- ./src/dune
+++ ./src/dune
@@ -1,5 +1,5 @@
 (rule (targets config.h rt-flags) (deps)
- (action (bash "cp %{lib:jst-config:config.h} %{lib:jst-config:rt-flags} .")))
+ (action (bash "cp '%{lib:jst-config:config.h}' '%{lib:jst-config:rt-flags}' .")))
 
 (library (name core_kernel) (public_name core_kernel)
  (install_c_headers time_ns_stubs)